# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build with Python

on:
    push:
        branches: ["master"]
    pull_request:
        branches: ["master"]

permissions:
    contents: read

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Set up Python 3.x
              uses: actions/setup-python@v3
              with:
                  python-version: "3.x"
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install flake8
            - name: Lint with flake8
              run: |
                  # stop the build if there are Python syntax errors or undefined names
                  flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                  # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                  flake8 . --count --exit-zero --max-complexity=12 --max-line-length=127 --statistics

    python3:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Set up Python 3.x
              uses: actions/setup-python@v4
              with:
                  python-version: "3.x"
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install pyinstaller
                  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - name: package to exe
              run: pyinstaller --noconfirm --clean ./.build/ddns.spec
            - name: run ddns
              run: ./dist/ddns || test -e "config.json"
            - name: help command
              run: ./dist/ddns -h

    python2:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Set up Python 2.7
              uses: actions/setup-python@v4
              with:
                  python-version: "2.7"
            - name: Install dependencies
              run: python -m pip install --upgrade pip
                  pip install pyinstaller==3.6
            - name: package to exe
              run: pyinstaller  --onefile --noconfirm --clean ./.build/ddns.spec
            - name: run ddns
              run: ./dist/ddns || test -e "config.json"
            - name: help command
              run: ./dist/ddns -h

    pypi:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Set up Python 3.x
              uses: actions/setup-python@v4
              with:
                  python-version: "3.x"
            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install build
            - name: Build package
              run: python -m build --sdist --wheel --outdir dist/
